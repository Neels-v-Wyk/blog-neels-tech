{
  
    
        "post0": {
            "title": "Automated Deployment of a Free Blog",
            "content": "Why do this? . My reasons for doing this are multifold, but what it boils down to are these two simple facts: . I am lazy | I don&#39;t like spending money | . I&#39;ve never had a blog so I thought I&#39;d try my hand at one. After getting some advice from a more experienced blogger, Charl, I decided to have a Hugo blog (because it&#39;s easy) hosted on Firebase (because it&#39;s free). After going through the motions I realized every time I wanted to publish a new post I&#39;d have to go through like three or four easy steps. The thing is, that&#39;s something like 25 seconds of my life I won&#39;t get back every time I make a post. So spent a few hours automating and documenting it, for maximum efficiency. . Setting everything up . Firebase . You can have up to three free projects on Google Firebase if you have a Google account, so you&#39;ll need one of those to get started. You&#39;ll also need a Hugo site ready to be deployed stored on GitHub. Once you&#39;ve got those, run npm install firebase-tools so that you can interact with firebase, then when it&#39;s finished you can run firebase login:ci to get a token that you can use later. It should look something like this: . ❯ firebase login:ci Visit this URL on this device to log in: https://accounts.google.com/o/oauth2/auth?client_id=563584335869-fgrhgmd47bqnekij5i8b5pr03ho849e6.apps.googleusercontent.com&amp;scope=email%20openid%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fcloudplatformprojects.readonly%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Ffirebase%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fcloud-platform&amp;response_type=code&amp;state=166870786&amp;redirect_uri=http%3A%2F%2Flocalhost%3A9005 Waiting for authentication... ✔ Success! Use this token to login on a CI server: thisisyourtoken-dontmakeitpublic-aliu34jnmsdfndf-r2u3rhkwjdfn Example: firebase deploy --token &quot;$FIREBASE_TOKEN&quot; . Take that token and create a GitHub secret with it, I named mine FIREBASE_TOKEN, as will be seen when we get to the next part. . In the root of your project directory run firebase init and do the following: . Select the &#39;Hosting&#39; option | Choose the project we set up earlier | Select default rules for database file | Select hugo deploy directory (public/ by default) | Say &#39;No&#39; to the single-app page question | This should create a few firebase related files, then we&#39;re all set to set up the Actions. . GitHub Actions . GitHub Actions are pretty cool. GitLab and BitBucket have been the leading git platforms with fancy tools like testing and CI/CD built into it, but recently GitHub has released Actions to also have a stake in the game. The best thing about GitHub actions is that they&#39;re completely free (for up to 2000 build minutes per month) for public repositories. . In the root of my repo, I have the directory .github/workflows/ with one file in it, deploy-hugo.yml: . name: Build &amp; deploy on: push: branches: - master jobs: build: runs-on: ubuntu-latest steps: - uses: actions/checkout@master - name: Get Hugo uses: peaceiris/actions-hugo@v2.2.0 with: hugo-version: &#39;latest&#39; - name: Build static files run: hugo --gc --minify --cleanDestinationDir - name: Deploy to Firebase uses: w9jds/firebase-action@master with: args: deploy --only hosting --project blog-neels-tech env: FIREBASE_TOKEN: $ . Let&#39;s break that down . name: Build &amp; deploy on: push: branches: - master jobs: build: runs-on: ubuntu-latest . What the above does, is whenever there&#39;s a new push to master, a bunch of tasks will be run on a clean ubuntu container. . steps: - uses: actions/checkout@master . Get the current repo&#39;s master branch using the checkout action. . - name: Get Hugo uses: peaceiris/actions-hugo@v2.2.0 with: hugo-version: &#39;latest&#39; - name: Build static files run: hugo --gc --minify --cleanDestinationDir . Get the Hugo Setup Action module and then use it to create the static files for hugo to serve, and finally, . - name: Deploy to Firebase uses: w9jds/firebase-action@master with: args: deploy --only hosting --project blog-neels-tech env: FIREBASE_TOKEN: $ . Deploy to Firebase with the token we generated earlier. . In conclusion . Whenever you want to create a new post, just run hugo new posts/tech-stuff.md and commit/push your changes when done, the rest will be handled for you :D .",
            "url": "https://blog.neels.tech/tech/2020/08/29/automated-deployment-of-a-free-blog.html",
            "relUrl": "/tech/2020/08/29/automated-deployment-of-a-free-blog.html",
            "date": " • Aug 29, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This is where you put the contents of your About page. Like all your pages, it’s in Markdown format. . This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://blog.neels.tech/_pages/about.html",
          "relUrl": "/_pages/about.html",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "",
          "content": "Welcome to my blog, where I infrequently post about whatever I’ve been up to. . Posts .",
          "url": "https://blog.neels.tech/",
          "relUrl": "/",
          "date": ""
      }
      
  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://blog.neels.tech/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}